#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Plasticore
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PlastiBase")]
	public partial class DataModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccountInformation(AccountInformation instance);
    partial void UpdateAccountInformation(AccountInformation instance);
    partial void DeleteAccountInformation(AccountInformation instance);
    partial void InsertRequisitionItem(RequisitionItem instance);
    partial void UpdateRequisitionItem(RequisitionItem instance);
    partial void DeleteRequisitionItem(RequisitionItem instance);
    partial void InsertAddress(Address instance);
    partial void UpdateAddress(Address instance);
    partial void DeleteAddress(Address instance);
    partial void InsertBuyerCondition(BuyerCondition instance);
    partial void UpdateBuyerCondition(BuyerCondition instance);
    partial void DeleteBuyerCondition(BuyerCondition instance);
    partial void InsertContact(Contact instance);
    partial void UpdateContact(Contact instance);
    partial void DeleteContact(Contact instance);
    partial void InsertDeliveryInformation(DeliveryInformation instance);
    partial void UpdateDeliveryInformation(DeliveryInformation instance);
    partial void DeleteDeliveryInformation(DeliveryInformation instance);
    partial void InsertPurchaseOrder(PurchaseOrder instance);
    partial void UpdatePurchaseOrder(PurchaseOrder instance);
    partial void DeletePurchaseOrder(PurchaseOrder instance);
    partial void InsertQuote(Quote instance);
    partial void UpdateQuote(Quote instance);
    partial void DeleteQuote(Quote instance);
    partial void InsertQuoteItem(QuoteItem instance);
    partial void UpdateQuoteItem(QuoteItem instance);
    partial void DeleteQuoteItem(QuoteItem instance);
    partial void InsertRequisition(Requisition instance);
    partial void UpdateRequisition(Requisition instance);
    partial void DeleteRequisition(Requisition instance);
    partial void InsertSellerCondition(SellerCondition instance);
    partial void UpdateSellerCondition(SellerCondition instance);
    partial void DeleteSellerCondition(SellerCondition instance);
    partial void InsertQuantityMatrix(QuantityMatrix instance);
    partial void UpdateQuantityMatrix(QuantityMatrix instance);
    partial void DeleteQuantityMatrix(QuantityMatrix instance);
    partial void InsertRequestedQuantity(RequestedQuantity instance);
    partial void UpdateRequestedQuantity(RequestedQuantity instance);
    partial void DeleteRequestedQuantity(RequestedQuantity instance);
    #endregion
		
		public DataModelDataContext() : 
				base(global::Plasticore.Properties.Settings.Default.PlastiBaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AccountInformation> AccountInformations
		{
			get
			{
				return this.GetTable<AccountInformation>();
			}
		}
		
		public System.Data.Linq.Table<RequisitionItem> RequisitionItems
		{
			get
			{
				return this.GetTable<RequisitionItem>();
			}
		}
		
		public System.Data.Linq.Table<Address> Addresses
		{
			get
			{
				return this.GetTable<Address>();
			}
		}
		
		public System.Data.Linq.Table<BuyerCondition> BuyerConditions
		{
			get
			{
				return this.GetTable<BuyerCondition>();
			}
		}
		
		public System.Data.Linq.Table<Contact> Contacts
		{
			get
			{
				return this.GetTable<Contact>();
			}
		}
		
		public System.Data.Linq.Table<DeliveryInformation> DeliveryInformations
		{
			get
			{
				return this.GetTable<DeliveryInformation>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseOrder> PurchaseOrders
		{
			get
			{
				return this.GetTable<PurchaseOrder>();
			}
		}
		
		public System.Data.Linq.Table<Quote> Quotes
		{
			get
			{
				return this.GetTable<Quote>();
			}
		}
		
		public System.Data.Linq.Table<QuoteItem> QuoteItems
		{
			get
			{
				return this.GetTable<QuoteItem>();
			}
		}
		
		public System.Data.Linq.Table<Requisition> Requisitions
		{
			get
			{
				return this.GetTable<Requisition>();
			}
		}
		
		public System.Data.Linq.Table<SellerCondition> SellerConditions
		{
			get
			{
				return this.GetTable<SellerCondition>();
			}
		}
		
		public System.Data.Linq.Table<QuantityMatrix> QuantityMatrixes
		{
			get
			{
				return this.GetTable<QuantityMatrix>();
			}
		}
		
		public System.Data.Linq.Table<RequestedQuantity> RequestedQuantities
		{
			get
			{
				return this.GetTable<RequestedQuantity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountInformation")]
	public partial class AccountInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ContactId;
		
		private int _BillingAddressId;
		
		private int @__DefaultCurrency;
		
		private EntityRef<Quote> _Quote;
		
		private EntityRef<Requisition> _Requisition;
		
		private EntityRef<Address> _BillingAddress;
		
		private EntityRef<Contact> _Contact;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnContactIdChanging(int value);
    partial void OnContactIdChanged();
    partial void OnBillingAddressIdChanging(int value);
    partial void OnBillingAddressIdChanged();
    partial void On_DefaultCurrencyChanging(int value);
    partial void On_DefaultCurrencyChanged();
    #endregion
		
		public AccountInformation()
		{
			this._Quote = default(EntityRef<Quote>);
			this._Requisition = default(EntityRef<Requisition>);
			this._BillingAddress = default(EntityRef<Address>);
			this._Contact = default(EntityRef<Contact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactId", DbType="Int NOT NULL")]
		public int ContactId
		{
			get
			{
				return this._ContactId;
			}
			set
			{
				if ((this._ContactId != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIdChanging(value);
					this.SendPropertyChanging();
					this._ContactId = value;
					this.SendPropertyChanged("ContactId");
					this.OnContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingAddressId", DbType="Int NOT NULL")]
		public int BillingAddressId
		{
			get
			{
				return this._BillingAddressId;
			}
			set
			{
				if ((this._BillingAddressId != value))
				{
					if (this._BillingAddress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillingAddressIdChanging(value);
					this.SendPropertyChanging();
					this._BillingAddressId = value;
					this.SendPropertyChanged("BillingAddressId");
					this.OnBillingAddressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_DefaultCurrency]", Storage="__DefaultCurrency", DbType="Int NOT NULL")]
		public int _DefaultCurrency
		{
			get
			{
				return this.@__DefaultCurrency;
			}
			set
			{
				if ((this.@__DefaultCurrency != value))
				{
					this.On_DefaultCurrencyChanging(value);
					this.SendPropertyChanging();
					this.@__DefaultCurrency = value;
					this.SendPropertyChanged("_DefaultCurrency");
					this.On_DefaultCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountInformation_Quote", Storage="_Quote", ThisKey="ID", OtherKey="SellerAccountInformationId", IsUnique=true, IsForeignKey=false)]
		public Quote Quote
		{
			get
			{
				return this._Quote.Entity;
			}
			set
			{
				Quote previousValue = this._Quote.Entity;
				if (((previousValue != value) 
							|| (this._Quote.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quote.Entity = null;
						previousValue.AccountInformation = null;
					}
					this._Quote.Entity = value;
					if ((value != null))
					{
						value.AccountInformation = this;
					}
					this.SendPropertyChanged("Quote");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountInformation_Requisition", Storage="_Requisition", ThisKey="ID", OtherKey="BuyerAccountInformationId", IsUnique=true, IsForeignKey=false)]
		public Requisition Requisition
		{
			get
			{
				return this._Requisition.Entity;
			}
			set
			{
				Requisition previousValue = this._Requisition.Entity;
				if (((previousValue != value) 
							|| (this._Requisition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Requisition.Entity = null;
						previousValue.AccountInformation = null;
					}
					this._Requisition.Entity = value;
					if ((value != null))
					{
						value.AccountInformation = this;
					}
					this.SendPropertyChanged("Requisition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_AccountInformation", Storage="_BillingAddress", ThisKey="BillingAddressId", OtherKey="Id", IsForeignKey=true)]
		public Address BillingAddress
		{
			get
			{
				return this._BillingAddress.Entity;
			}
			set
			{
				Address previousValue = this._BillingAddress.Entity;
				if (((previousValue != value) 
							|| (this._BillingAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillingAddress.Entity = null;
						previousValue.AccountInformation = null;
					}
					this._BillingAddress.Entity = value;
					if ((value != null))
					{
						value.AccountInformation = this;
						this._BillingAddressId = value.Id;
					}
					else
					{
						this._BillingAddressId = default(int);
					}
					this.SendPropertyChanged("BillingAddress");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_AccountInformation", Storage="_Contact", ThisKey="ContactId", OtherKey="Id", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.AccountInformation = null;
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.AccountInformation = this;
						this._ContactId = value.Id;
					}
					else
					{
						this._ContactId = default(int);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequisitionItem")]
	public partial class RequisitionItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RequisitionId;
		
		private int _ItemNo;
		
		private System.Nullable<int> _NumberOfReleases;
		
		private System.Nullable<int> _ReleasePeriod;
		
		private int _DeliveryInformationId;
		
		private EntitySet<BuyerCondition> _BuyerConditions;
		
		private EntitySet<QuoteItem> _QuoteItems;
		
		private EntitySet<RequestedQuantity> _RequestedQuantities;
		
		private EntityRef<DeliveryInformation> _Delivery;
		
		private EntityRef<Requisition> _Requisition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRequisitionIdChanging(int value);
    partial void OnRequisitionIdChanged();
    partial void OnItemNoChanging(int value);
    partial void OnItemNoChanged();
    partial void OnNumberOfReleasesChanging(System.Nullable<int> value);
    partial void OnNumberOfReleasesChanged();
    partial void OnReleasePeriodChanging(System.Nullable<int> value);
    partial void OnReleasePeriodChanged();
    partial void OnDeliveryInformationIdChanging(int value);
    partial void OnDeliveryInformationIdChanged();
    #endregion
		
		public RequisitionItem()
		{
			this._BuyerConditions = new EntitySet<BuyerCondition>(new Action<BuyerCondition>(this.attach_BuyerConditions), new Action<BuyerCondition>(this.detach_BuyerConditions));
			this._QuoteItems = new EntitySet<QuoteItem>(new Action<QuoteItem>(this.attach_QuoteItems), new Action<QuoteItem>(this.detach_QuoteItems));
			this._RequestedQuantities = new EntitySet<RequestedQuantity>(new Action<RequestedQuantity>(this.attach_RequestedQuantities), new Action<RequestedQuantity>(this.detach_RequestedQuantities));
			this._Delivery = default(EntityRef<DeliveryInformation>);
			this._Requisition = default(EntityRef<Requisition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequisitionId", DbType="Int NOT NULL")]
		public int RequisitionId
		{
			get
			{
				return this._RequisitionId;
			}
			set
			{
				if ((this._RequisitionId != value))
				{
					if (this._Requisition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequisitionIdChanging(value);
					this.SendPropertyChanging();
					this._RequisitionId = value;
					this.SendPropertyChanged("RequisitionId");
					this.OnRequisitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="Int NOT NULL")]
		public int ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfReleases", DbType="Int")]
		public System.Nullable<int> NumberOfReleases
		{
			get
			{
				return this._NumberOfReleases;
			}
			set
			{
				if ((this._NumberOfReleases != value))
				{
					this.OnNumberOfReleasesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfReleases = value;
					this.SendPropertyChanged("NumberOfReleases");
					this.OnNumberOfReleasesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleasePeriod", DbType="Int")]
		public System.Nullable<int> ReleasePeriod
		{
			get
			{
				return this._ReleasePeriod;
			}
			set
			{
				if ((this._ReleasePeriod != value))
				{
					this.OnReleasePeriodChanging(value);
					this.SendPropertyChanging();
					this._ReleasePeriod = value;
					this.SendPropertyChanged("ReleasePeriod");
					this.OnReleasePeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryInformationId", DbType="Int NOT NULL")]
		public int DeliveryInformationId
		{
			get
			{
				return this._DeliveryInformationId;
			}
			set
			{
				if ((this._DeliveryInformationId != value))
				{
					if (this._Delivery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryInformationIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryInformationId = value;
					this.SendPropertyChanged("DeliveryInformationId");
					this.OnDeliveryInformationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequisitionItem_BuyerCondition", Storage="_BuyerConditions", ThisKey="Id", OtherKey="RequisitionItemId")]
		public EntitySet<BuyerCondition> BuyerConditions
		{
			get
			{
				return this._BuyerConditions;
			}
			set
			{
				this._BuyerConditions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequisitionItem_QuoteItem", Storage="_QuoteItems", ThisKey="Id", OtherKey="RequisitionItemId")]
		public EntitySet<QuoteItem> QuoteItems
		{
			get
			{
				return this._QuoteItems;
			}
			set
			{
				this._QuoteItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequisitionItem_RequestedQuantity", Storage="_RequestedQuantities", ThisKey="Id", OtherKey="RequisitionItemId")]
		public EntitySet<RequestedQuantity> RequestedQuantities
		{
			get
			{
				return this._RequestedQuantities;
			}
			set
			{
				this._RequestedQuantities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeliveryInformation_RequisitionItem", Storage="_Delivery", ThisKey="DeliveryInformationId", OtherKey="Id", IsForeignKey=true)]
		public DeliveryInformation Delivery
		{
			get
			{
				return this._Delivery.Entity;
			}
			set
			{
				DeliveryInformation previousValue = this._Delivery.Entity;
				if (((previousValue != value) 
							|| (this._Delivery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Delivery.Entity = null;
						previousValue.RequisitionItem = null;
					}
					this._Delivery.Entity = value;
					if ((value != null))
					{
						value.RequisitionItem = this;
						this._DeliveryInformationId = value.Id;
					}
					else
					{
						this._DeliveryInformationId = default(int);
					}
					this.SendPropertyChanged("Delivery");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Requisition_RequisitionItem", Storage="_Requisition", ThisKey="RequisitionId", OtherKey="Id", IsForeignKey=true)]
		public Requisition Requisition
		{
			get
			{
				return this._Requisition.Entity;
			}
			set
			{
				Requisition previousValue = this._Requisition.Entity;
				if (((previousValue != value) 
							|| (this._Requisition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Requisition.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Requisition.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._RequisitionId = value.Id;
					}
					else
					{
						this._RequisitionId = default(int);
					}
					this.SendPropertyChanged("Requisition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BuyerConditions(BuyerCondition entity)
		{
			this.SendPropertyChanging();
			entity.RequisitionItem = this;
		}
		
		private void detach_BuyerConditions(BuyerCondition entity)
		{
			this.SendPropertyChanging();
			entity.RequisitionItem = null;
		}
		
		private void attach_QuoteItems(QuoteItem entity)
		{
			this.SendPropertyChanging();
			entity.RequisitionItem = this;
		}
		
		private void detach_QuoteItems(QuoteItem entity)
		{
			this.SendPropertyChanging();
			entity.RequisitionItem = null;
		}
		
		private void attach_RequestedQuantities(RequestedQuantity entity)
		{
			this.SendPropertyChanging();
			entity.RequisitionItem = this;
		}
		
		private void detach_RequestedQuantities(RequestedQuantity entity)
		{
			this.SendPropertyChanging();
			entity.RequisitionItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Address")]
	public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _City;
		
		private string _AddressLine1;
		
		private string _AddressLine2;
		
		private string _Province;
		
		private string _PostalCode;
		
		private int @__Country;
		
		private EntityRef<AccountInformation> _AccountInformation;
		
		private EntityRef<DeliveryInformation> _DeliveryInformation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAddressLine1Changing(string value);
    partial void OnAddressLine1Changed();
    partial void OnAddressLine2Changing(string value);
    partial void OnAddressLine2Changed();
    partial void OnProvinceChanging(string value);
    partial void OnProvinceChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void On_CountryChanging(int value);
    partial void On_CountryChanged();
    #endregion
		
		public Address()
		{
			this._AccountInformation = default(EntityRef<AccountInformation>);
			this._DeliveryInformation = default(EntityRef<DeliveryInformation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AddressLine1
		{
			get
			{
				return this._AddressLine1;
			}
			set
			{
				if ((this._AddressLine1 != value))
				{
					this.OnAddressLine1Changing(value);
					this.SendPropertyChanging();
					this._AddressLine1 = value;
					this.SendPropertyChanged("AddressLine1");
					this.OnAddressLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine2", DbType="VarChar(50)")]
		public string AddressLine2
		{
			get
			{
				return this._AddressLine2;
			}
			set
			{
				if ((this._AddressLine2 != value))
				{
					this.OnAddressLine2Changing(value);
					this.SendPropertyChanging();
					this._AddressLine2 = value;
					this.SendPropertyChanged("AddressLine2");
					this.OnAddressLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this.OnProvinceChanging(value);
					this.SendPropertyChanging();
					this._Province = value;
					this.SendPropertyChanged("Province");
					this.OnProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="VarChar(14) NOT NULL", CanBeNull=false)]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_Country]", Storage="__Country", DbType="Int NOT NULL")]
		public int _Country
		{
			get
			{
				return this.@__Country;
			}
			set
			{
				if ((this.@__Country != value))
				{
					this.On_CountryChanging(value);
					this.SendPropertyChanging();
					this.@__Country = value;
					this.SendPropertyChanged("_Country");
					this.On_CountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_AccountInformation", Storage="_AccountInformation", ThisKey="Id", OtherKey="BillingAddressId", IsUnique=true, IsForeignKey=false)]
		public AccountInformation AccountInformation
		{
			get
			{
				return this._AccountInformation.Entity;
			}
			set
			{
				AccountInformation previousValue = this._AccountInformation.Entity;
				if (((previousValue != value) 
							|| (this._AccountInformation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountInformation.Entity = null;
						previousValue.BillingAddress = null;
					}
					this._AccountInformation.Entity = value;
					if ((value != null))
					{
						value.BillingAddress = this;
					}
					this.SendPropertyChanged("AccountInformation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_DeliveryInformation", Storage="_DeliveryInformation", ThisKey="Id", OtherKey="DestinationAddressId", IsUnique=true, IsForeignKey=false)]
		public DeliveryInformation DeliveryInformation
		{
			get
			{
				return this._DeliveryInformation.Entity;
			}
			set
			{
				DeliveryInformation previousValue = this._DeliveryInformation.Entity;
				if (((previousValue != value) 
							|| (this._DeliveryInformation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeliveryInformation.Entity = null;
						previousValue.Address = null;
					}
					this._DeliveryInformation.Entity = value;
					if ((value != null))
					{
						value.Address = this;
					}
					this.SendPropertyChanged("DeliveryInformation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BuyerCondition")]
	public partial class BuyerCondition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RequisitionItemId;
		
		private string _Condition;
		
		private EntityRef<RequisitionItem> _RequisitionItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRequisitionItemIdChanging(int value);
    partial void OnRequisitionItemIdChanged();
    partial void OnConditionChanging(string value);
    partial void OnConditionChanged();
    #endregion
		
		public BuyerCondition()
		{
			this._RequisitionItem = default(EntityRef<RequisitionItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequisitionItemId", DbType="Int NOT NULL")]
		public int RequisitionItemId
		{
			get
			{
				return this._RequisitionItemId;
			}
			set
			{
				if ((this._RequisitionItemId != value))
				{
					if (this._RequisitionItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequisitionItemIdChanging(value);
					this.SendPropertyChanging();
					this._RequisitionItemId = value;
					this.SendPropertyChanged("RequisitionItemId");
					this.OnRequisitionItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Condition", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this.OnConditionChanging(value);
					this.SendPropertyChanging();
					this._Condition = value;
					this.SendPropertyChanged("Condition");
					this.OnConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequisitionItem_BuyerCondition", Storage="_RequisitionItem", ThisKey="RequisitionItemId", OtherKey="Id", IsForeignKey=true)]
		public RequisitionItem RequisitionItem
		{
			get
			{
				return this._RequisitionItem.Entity;
			}
			set
			{
				RequisitionItem previousValue = this._RequisitionItem.Entity;
				if (((previousValue != value) 
							|| (this._RequisitionItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequisitionItem.Entity = null;
						previousValue.BuyerConditions.Remove(this);
					}
					this._RequisitionItem.Entity = value;
					if ((value != null))
					{
						value.BuyerConditions.Add(this);
						this._RequisitionItemId = value.Id;
					}
					else
					{
						this._RequisitionItemId = default(int);
					}
					this.SendPropertyChanged("RequisitionItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FullName;
		
		private string _PhoneNumber;
		
		private string _FaxNumber;
		
		private string _Email;
		
		private System.Nullable<int> @__Ddt;
		
		private string _AdditionalComment;
		
		private EntityRef<AccountInformation> _AccountInformation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnFaxNumberChanging(string value);
    partial void OnFaxNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void On_DdtChanging(System.Nullable<int> value);
    partial void On_DdtChanged();
    partial void OnAdditionalCommentChanging(string value);
    partial void OnAdditionalCommentChanged();
    #endregion
		
		public Contact()
		{
			this._AccountInformation = default(EntityRef<AccountInformation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNumber", DbType="VarChar(20)")]
		public string FaxNumber
		{
			get
			{
				return this._FaxNumber;
			}
			set
			{
				if ((this._FaxNumber != value))
				{
					this.OnFaxNumberChanging(value);
					this.SendPropertyChanging();
					this._FaxNumber = value;
					this.SendPropertyChanged("FaxNumber");
					this.OnFaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_Ddt]", Storage="__Ddt", DbType="Int")]
		public System.Nullable<int> _Ddt
		{
			get
			{
				return this.@__Ddt;
			}
			set
			{
				if ((this.@__Ddt != value))
				{
					this.On_DdtChanging(value);
					this.SendPropertyChanging();
					this.@__Ddt = value;
					this.SendPropertyChanged("_Ddt");
					this.On_DdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalComment", DbType="VarChar(1000)")]
		public string AdditionalComment
		{
			get
			{
				return this._AdditionalComment;
			}
			set
			{
				if ((this._AdditionalComment != value))
				{
					this.OnAdditionalCommentChanging(value);
					this.SendPropertyChanging();
					this._AdditionalComment = value;
					this.SendPropertyChanged("AdditionalComment");
					this.OnAdditionalCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_AccountInformation", Storage="_AccountInformation", ThisKey="Id", OtherKey="ContactId", IsUnique=true, IsForeignKey=false)]
		public AccountInformation AccountInformation
		{
			get
			{
				return this._AccountInformation.Entity;
			}
			set
			{
				AccountInformation previousValue = this._AccountInformation.Entity;
				if (((previousValue != value) 
							|| (this._AccountInformation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountInformation.Entity = null;
						previousValue.Contact = null;
					}
					this._AccountInformation.Entity = value;
					if ((value != null))
					{
						value.Contact = this;
					}
					this.SendPropertyChanged("AccountInformation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeliveryInformation")]
	public partial class DeliveryInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _RequestedDeliveryDate;
		
		private System.Nullable<int> @__FOB;
		
		private System.Nullable<int> _DestinationAddressId;
		
		private EntityRef<RequisitionItem> _RequisitionItem;
		
		private EntityRef<Address> _Address;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRequestedDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestedDeliveryDateChanged();
    partial void On_FOBChanging(System.Nullable<int> value);
    partial void On_FOBChanged();
    partial void OnDestinationAddressIdChanging(System.Nullable<int> value);
    partial void OnDestinationAddressIdChanged();
    #endregion
		
		public DeliveryInformation()
		{
			this._RequisitionItem = default(EntityRef<RequisitionItem>);
			this._Address = default(EntityRef<Address>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedDeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestedDeliveryDate
		{
			get
			{
				return this._RequestedDeliveryDate;
			}
			set
			{
				if ((this._RequestedDeliveryDate != value))
				{
					this.OnRequestedDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._RequestedDeliveryDate = value;
					this.SendPropertyChanged("RequestedDeliveryDate");
					this.OnRequestedDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_FOB]", Storage="__FOB", DbType="Int")]
		public System.Nullable<int> _FOB
		{
			get
			{
				return this.@__FOB;
			}
			set
			{
				if ((this.@__FOB != value))
				{
					this.On_FOBChanging(value);
					this.SendPropertyChanging();
					this.@__FOB = value;
					this.SendPropertyChanged("_FOB");
					this.On_FOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationAddressId", DbType="Int")]
		public System.Nullable<int> DestinationAddressId
		{
			get
			{
				return this._DestinationAddressId;
			}
			set
			{
				if ((this._DestinationAddressId != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDestinationAddressIdChanging(value);
					this.SendPropertyChanging();
					this._DestinationAddressId = value;
					this.SendPropertyChanged("DestinationAddressId");
					this.OnDestinationAddressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeliveryInformation_RequisitionItem", Storage="_RequisitionItem", ThisKey="Id", OtherKey="DeliveryInformationId", IsUnique=true, IsForeignKey=false)]
		public RequisitionItem RequisitionItem
		{
			get
			{
				return this._RequisitionItem.Entity;
			}
			set
			{
				RequisitionItem previousValue = this._RequisitionItem.Entity;
				if (((previousValue != value) 
							|| (this._RequisitionItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequisitionItem.Entity = null;
						previousValue.Delivery = null;
					}
					this._RequisitionItem.Entity = value;
					if ((value != null))
					{
						value.Delivery = this;
					}
					this.SendPropertyChanged("RequisitionItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_DeliveryInformation", Storage="_Address", ThisKey="DestinationAddressId", OtherKey="Id", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.DeliveryInformation = null;
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.DeliveryInformation = this;
						this._DestinationAddressId = value.Id;
					}
					else
					{
						this._DestinationAddressId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseOrder")]
	public partial class PurchaseOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public PurchaseOrder()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quote")]
	public partial class Quote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RequisitionId;
		
		private int _SellerAccountNumber;
		
		private int _SellerAccountInformationId;
		
		private EntitySet<QuoteItem> _QuoteItems;
		
		private EntityRef<AccountInformation> _AccountInformation;
		
		private EntityRef<Requisition> _Requisition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRequisitionIdChanging(int value);
    partial void OnRequisitionIdChanged();
    partial void OnSellerAccountNumberChanging(int value);
    partial void OnSellerAccountNumberChanged();
    partial void OnSellerAccountInformationIdChanging(int value);
    partial void OnSellerAccountInformationIdChanged();
    #endregion
		
		public Quote()
		{
			this._QuoteItems = new EntitySet<QuoteItem>(new Action<QuoteItem>(this.attach_QuoteItems), new Action<QuoteItem>(this.detach_QuoteItems));
			this._AccountInformation = default(EntityRef<AccountInformation>);
			this._Requisition = default(EntityRef<Requisition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequisitionId", DbType="Int NOT NULL")]
		public int RequisitionId
		{
			get
			{
				return this._RequisitionId;
			}
			set
			{
				if ((this._RequisitionId != value))
				{
					if (this._Requisition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequisitionIdChanging(value);
					this.SendPropertyChanging();
					this._RequisitionId = value;
					this.SendPropertyChanged("RequisitionId");
					this.OnRequisitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerAccountNumber", DbType="Int NOT NULL")]
		public int SellerAccountNumber
		{
			get
			{
				return this._SellerAccountNumber;
			}
			set
			{
				if ((this._SellerAccountNumber != value))
				{
					this.OnSellerAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._SellerAccountNumber = value;
					this.SendPropertyChanged("SellerAccountNumber");
					this.OnSellerAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerAccountInformationId", DbType="Int NOT NULL")]
		public int SellerAccountInformationId
		{
			get
			{
				return this._SellerAccountInformationId;
			}
			set
			{
				if ((this._SellerAccountInformationId != value))
				{
					if (this._AccountInformation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerAccountInformationIdChanging(value);
					this.SendPropertyChanging();
					this._SellerAccountInformationId = value;
					this.SendPropertyChanged("SellerAccountInformationId");
					this.OnSellerAccountInformationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quote_QuoteItem", Storage="_QuoteItems", ThisKey="Id", OtherKey="QuoteId")]
		public EntitySet<QuoteItem> QuoteItems
		{
			get
			{
				return this._QuoteItems;
			}
			set
			{
				this._QuoteItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountInformation_Quote", Storage="_AccountInformation", ThisKey="SellerAccountInformationId", OtherKey="ID", IsForeignKey=true)]
		public AccountInformation AccountInformation
		{
			get
			{
				return this._AccountInformation.Entity;
			}
			set
			{
				AccountInformation previousValue = this._AccountInformation.Entity;
				if (((previousValue != value) 
							|| (this._AccountInformation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountInformation.Entity = null;
						previousValue.Quote = null;
					}
					this._AccountInformation.Entity = value;
					if ((value != null))
					{
						value.Quote = this;
						this._SellerAccountInformationId = value.ID;
					}
					else
					{
						this._SellerAccountInformationId = default(int);
					}
					this.SendPropertyChanged("AccountInformation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Requisition_Quote", Storage="_Requisition", ThisKey="RequisitionId", OtherKey="Id", IsForeignKey=true)]
		public Requisition Requisition
		{
			get
			{
				return this._Requisition.Entity;
			}
			set
			{
				Requisition previousValue = this._Requisition.Entity;
				if (((previousValue != value) 
							|| (this._Requisition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Requisition.Entity = null;
						previousValue.Quotes.Remove(this);
					}
					this._Requisition.Entity = value;
					if ((value != null))
					{
						value.Quotes.Add(this);
						this._RequisitionId = value.Id;
					}
					else
					{
						this._RequisitionId = default(int);
					}
					this.SendPropertyChanged("Requisition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuoteItems(QuoteItem entity)
		{
			this.SendPropertyChanging();
			entity.Quote = this;
		}
		
		private void detach_QuoteItems(QuoteItem entity)
		{
			this.SendPropertyChanging();
			entity.Quote = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuoteItem")]
	public partial class QuoteItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _QuoteId;
		
		private int _RequisitionItemId;
		
		private EntitySet<SellerCondition> _SellerConditions;
		
		private EntitySet<QuantityMatrix> _QuantityMatrixes;
		
		private EntityRef<Quote> _Quote;
		
		private EntityRef<RequisitionItem> _RequisitionItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnQuoteIdChanging(int value);
    partial void OnQuoteIdChanged();
    partial void OnRequisitionItemIdChanging(int value);
    partial void OnRequisitionItemIdChanged();
    #endregion
		
		public QuoteItem()
		{
			this._SellerConditions = new EntitySet<SellerCondition>(new Action<SellerCondition>(this.attach_SellerConditions), new Action<SellerCondition>(this.detach_SellerConditions));
			this._QuantityMatrixes = new EntitySet<QuantityMatrix>(new Action<QuantityMatrix>(this.attach_QuantityMatrixes), new Action<QuantityMatrix>(this.detach_QuantityMatrixes));
			this._Quote = default(EntityRef<Quote>);
			this._RequisitionItem = default(EntityRef<RequisitionItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteId", DbType="Int NOT NULL")]
		public int QuoteId
		{
			get
			{
				return this._QuoteId;
			}
			set
			{
				if ((this._QuoteId != value))
				{
					if (this._Quote.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuoteIdChanging(value);
					this.SendPropertyChanging();
					this._QuoteId = value;
					this.SendPropertyChanged("QuoteId");
					this.OnQuoteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequisitionItemId", DbType="Int NOT NULL")]
		public int RequisitionItemId
		{
			get
			{
				return this._RequisitionItemId;
			}
			set
			{
				if ((this._RequisitionItemId != value))
				{
					if (this._RequisitionItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequisitionItemIdChanging(value);
					this.SendPropertyChanging();
					this._RequisitionItemId = value;
					this.SendPropertyChanged("RequisitionItemId");
					this.OnRequisitionItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteItem_SellerCondition", Storage="_SellerConditions", ThisKey="ID", OtherKey="QuoteItemId")]
		public EntitySet<SellerCondition> SellerConditions
		{
			get
			{
				return this._SellerConditions;
			}
			set
			{
				this._SellerConditions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteItem_QuantityMatrix", Storage="_QuantityMatrixes", ThisKey="ID", OtherKey="QuoteItemId")]
		public EntitySet<QuantityMatrix> QuantityMatrixes
		{
			get
			{
				return this._QuantityMatrixes;
			}
			set
			{
				this._QuantityMatrixes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quote_QuoteItem", Storage="_Quote", ThisKey="QuoteId", OtherKey="Id", IsForeignKey=true)]
		public Quote Quote
		{
			get
			{
				return this._Quote.Entity;
			}
			set
			{
				Quote previousValue = this._Quote.Entity;
				if (((previousValue != value) 
							|| (this._Quote.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quote.Entity = null;
						previousValue.QuoteItems.Remove(this);
					}
					this._Quote.Entity = value;
					if ((value != null))
					{
						value.QuoteItems.Add(this);
						this._QuoteId = value.Id;
					}
					else
					{
						this._QuoteId = default(int);
					}
					this.SendPropertyChanged("Quote");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequisitionItem_QuoteItem", Storage="_RequisitionItem", ThisKey="RequisitionItemId", OtherKey="Id", IsForeignKey=true)]
		public RequisitionItem RequisitionItem
		{
			get
			{
				return this._RequisitionItem.Entity;
			}
			set
			{
				RequisitionItem previousValue = this._RequisitionItem.Entity;
				if (((previousValue != value) 
							|| (this._RequisitionItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequisitionItem.Entity = null;
						previousValue.QuoteItems.Remove(this);
					}
					this._RequisitionItem.Entity = value;
					if ((value != null))
					{
						value.QuoteItems.Add(this);
						this._RequisitionItemId = value.Id;
					}
					else
					{
						this._RequisitionItemId = default(int);
					}
					this.SendPropertyChanged("RequisitionItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SellerConditions(SellerCondition entity)
		{
			this.SendPropertyChanging();
			entity.QuoteItem = this;
		}
		
		private void detach_SellerConditions(SellerCondition entity)
		{
			this.SendPropertyChanging();
			entity.QuoteItem = null;
		}
		
		private void attach_QuantityMatrixes(QuantityMatrix entity)
		{
			this.SendPropertyChanging();
			entity.QuoteItem = this;
		}
		
		private void detach_QuantityMatrixes(QuantityMatrix entity)
		{
			this.SendPropertyChanging();
			entity.QuoteItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Requisition")]
	[global::System.Data.Linq.Mapping.InheritanceMappingAttribute(Code="0", Type=typeof(Draft), IsDefault=true)]
	[global::System.Data.Linq.Mapping.InheritanceMappingAttribute(Code="1", Type=typeof(Rfq))]
	public abstract partial class Requisition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int @__Type;
		
		private int _BuyerAccountNumber;
		
		private int _BuyerAccountInformationId;
		
		private System.DateTime _Deadline;
		
		private EntitySet<RequisitionItem> _Items;
		
		private EntitySet<Quote> _Quotes;
		
		private EntityRef<AccountInformation> _AccountInformation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void On_TypeChanging(int value);
    partial void On_TypeChanged();
    partial void OnBuyerAccountNumberChanging(int value);
    partial void OnBuyerAccountNumberChanged();
    partial void OnBuyerAccountInformationIdChanging(int value);
    partial void OnBuyerAccountInformationIdChanged();
    partial void OnDeadlineChanging(System.DateTime value);
    partial void OnDeadlineChanged();
    #endregion
		
		public Requisition()
		{
			this._Items = new EntitySet<RequisitionItem>(new Action<RequisitionItem>(this.attach_Items), new Action<RequisitionItem>(this.detach_Items));
			this._Quotes = new EntitySet<Quote>(new Action<Quote>(this.attach_Quotes), new Action<Quote>(this.detach_Quotes));
			this._AccountInformation = default(EntityRef<AccountInformation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_Type]", Storage="__Type", DbType="Int NOT NULL", IsDiscriminator=true)]
		public int _Type
		{
			get
			{
				return this.@__Type;
			}
			set
			{
				if ((this.@__Type != value))
				{
					this.On_TypeChanging(value);
					this.SendPropertyChanging();
					this.@__Type = value;
					this.SendPropertyChanged("_Type");
					this.On_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerAccountNumber", DbType="Int NOT NULL")]
		public int BuyerAccountNumber
		{
			get
			{
				return this._BuyerAccountNumber;
			}
			set
			{
				if ((this._BuyerAccountNumber != value))
				{
					this.OnBuyerAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._BuyerAccountNumber = value;
					this.SendPropertyChanged("BuyerAccountNumber");
					this.OnBuyerAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerAccountInformationId", DbType="Int NOT NULL")]
		public int BuyerAccountInformationId
		{
			get
			{
				return this._BuyerAccountInformationId;
			}
			set
			{
				if ((this._BuyerAccountInformationId != value))
				{
					if (this._AccountInformation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuyerAccountInformationIdChanging(value);
					this.SendPropertyChanging();
					this._BuyerAccountInformationId = value;
					this.SendPropertyChanged("BuyerAccountInformationId");
					this.OnBuyerAccountInformationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deadline", DbType="DateTime NOT NULL")]
		public System.DateTime Deadline
		{
			get
			{
				return this._Deadline;
			}
			set
			{
				if ((this._Deadline != value))
				{
					this.OnDeadlineChanging(value);
					this.SendPropertyChanging();
					this._Deadline = value;
					this.SendPropertyChanged("Deadline");
					this.OnDeadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Requisition_RequisitionItem", Storage="_Items", ThisKey="Id", OtherKey="RequisitionId")]
		public EntitySet<RequisitionItem> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Requisition_Quote", Storage="_Quotes", ThisKey="Id", OtherKey="RequisitionId")]
		public EntitySet<Quote> Quotes
		{
			get
			{
				return this._Quotes;
			}
			set
			{
				this._Quotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountInformation_Requisition", Storage="_AccountInformation", ThisKey="BuyerAccountInformationId", OtherKey="ID", IsForeignKey=true)]
		public AccountInformation AccountInformation
		{
			get
			{
				return this._AccountInformation.Entity;
			}
			set
			{
				AccountInformation previousValue = this._AccountInformation.Entity;
				if (((previousValue != value) 
							|| (this._AccountInformation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountInformation.Entity = null;
						previousValue.Requisition = null;
					}
					this._AccountInformation.Entity = value;
					if ((value != null))
					{
						value.Requisition = this;
						this._BuyerAccountInformationId = value.ID;
					}
					else
					{
						this._BuyerAccountInformationId = default(int);
					}
					this.SendPropertyChanged("AccountInformation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(RequisitionItem entity)
		{
			this.SendPropertyChanging();
			entity.Requisition = this;
		}
		
		private void detach_Items(RequisitionItem entity)
		{
			this.SendPropertyChanging();
			entity.Requisition = null;
		}
		
		private void attach_Quotes(Quote entity)
		{
			this.SendPropertyChanging();
			entity.Requisition = this;
		}
		
		private void detach_Quotes(Quote entity)
		{
			this.SendPropertyChanging();
			entity.Requisition = null;
		}
	}
	
	public partial class Draft : Requisition
	{
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    #endregion
		
		public Draft()
		{
			OnCreated();
		}
	}
	
	public partial class Rfq : Requisition
	{
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    #endregion
		
		public Rfq()
		{
			OnCreated();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SellerCondition")]
	public partial class SellerCondition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _QuoteItemId;
		
		private string _Condition;
		
		private EntityRef<QuoteItem> _QuoteItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnQuoteItemIdChanging(int value);
    partial void OnQuoteItemIdChanged();
    partial void OnConditionChanging(string value);
    partial void OnConditionChanged();
    #endregion
		
		public SellerCondition()
		{
			this._QuoteItem = default(EntityRef<QuoteItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteItemId", DbType="Int NOT NULL")]
		public int QuoteItemId
		{
			get
			{
				return this._QuoteItemId;
			}
			set
			{
				if ((this._QuoteItemId != value))
				{
					if (this._QuoteItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuoteItemIdChanging(value);
					this.SendPropertyChanging();
					this._QuoteItemId = value;
					this.SendPropertyChanged("QuoteItemId");
					this.OnQuoteItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Condition", DbType="VarChar(500)")]
		public string Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this.OnConditionChanging(value);
					this.SendPropertyChanging();
					this._Condition = value;
					this.SendPropertyChanged("Condition");
					this.OnConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteItem_SellerCondition", Storage="_QuoteItem", ThisKey="QuoteItemId", OtherKey="ID", IsForeignKey=true)]
		public QuoteItem QuoteItem
		{
			get
			{
				return this._QuoteItem.Entity;
			}
			set
			{
				QuoteItem previousValue = this._QuoteItem.Entity;
				if (((previousValue != value) 
							|| (this._QuoteItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuoteItem.Entity = null;
						previousValue.SellerConditions.Remove(this);
					}
					this._QuoteItem.Entity = value;
					if ((value != null))
					{
						value.SellerConditions.Add(this);
						this._QuoteItemId = value.ID;
					}
					else
					{
						this._QuoteItemId = default(int);
					}
					this.SendPropertyChanged("QuoteItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuantityMatrix")]
	public partial class QuantityMatrix : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _QuoteItemId;
		
		private int _Figure;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private EntityRef<QuoteItem> _QuoteItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnQuoteItemIdChanging(int value);
    partial void OnQuoteItemIdChanged();
    partial void OnFigureChanging(int value);
    partial void OnFigureChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    #endregion
		
		public QuantityMatrix()
		{
			this._QuoteItem = default(EntityRef<QuoteItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteItemId", DbType="Int NOT NULL")]
		public int QuoteItemId
		{
			get
			{
				return this._QuoteItemId;
			}
			set
			{
				if ((this._QuoteItemId != value))
				{
					if (this._QuoteItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuoteItemIdChanging(value);
					this.SendPropertyChanging();
					this._QuoteItemId = value;
					this.SendPropertyChanged("QuoteItemId");
					this.OnQuoteItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Figure", DbType="Int NOT NULL")]
		public int Figure
		{
			get
			{
				return this._Figure;
			}
			set
			{
				if ((this._Figure != value))
				{
					this.OnFigureChanging(value);
					this.SendPropertyChanging();
					this._Figure = value;
					this.SendPropertyChanged("Figure");
					this.OnFigureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteItem_QuantityMatrix", Storage="_QuoteItem", ThisKey="QuoteItemId", OtherKey="ID", IsForeignKey=true)]
		public QuoteItem QuoteItem
		{
			get
			{
				return this._QuoteItem.Entity;
			}
			set
			{
				QuoteItem previousValue = this._QuoteItem.Entity;
				if (((previousValue != value) 
							|| (this._QuoteItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuoteItem.Entity = null;
						previousValue.QuantityMatrixes.Remove(this);
					}
					this._QuoteItem.Entity = value;
					if ((value != null))
					{
						value.QuantityMatrixes.Add(this);
						this._QuoteItemId = value.ID;
					}
					else
					{
						this._QuoteItemId = default(int);
					}
					this.SendPropertyChanged("QuoteItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestedQuantity")]
	public partial class RequestedQuantity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RequisitionItemId;
		
		private int _Figure;
		
		private EntityRef<RequisitionItem> _RequisitionItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRequisitionItemIdChanging(int value);
    partial void OnRequisitionItemIdChanged();
    partial void OnFigureChanging(int value);
    partial void OnFigureChanged();
    #endregion
		
		public RequestedQuantity()
		{
			this._RequisitionItem = default(EntityRef<RequisitionItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequisitionItemId", DbType="Int NOT NULL")]
		public int RequisitionItemId
		{
			get
			{
				return this._RequisitionItemId;
			}
			set
			{
				if ((this._RequisitionItemId != value))
				{
					if (this._RequisitionItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequisitionItemIdChanging(value);
					this.SendPropertyChanging();
					this._RequisitionItemId = value;
					this.SendPropertyChanged("RequisitionItemId");
					this.OnRequisitionItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Figure", DbType="Int NOT NULL")]
		public int Figure
		{
			get
			{
				return this._Figure;
			}
			set
			{
				if ((this._Figure != value))
				{
					this.OnFigureChanging(value);
					this.SendPropertyChanging();
					this._Figure = value;
					this.SendPropertyChanged("Figure");
					this.OnFigureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequisitionItem_RequestedQuantity", Storage="_RequisitionItem", ThisKey="RequisitionItemId", OtherKey="Id", IsForeignKey=true)]
		public RequisitionItem RequisitionItem
		{
			get
			{
				return this._RequisitionItem.Entity;
			}
			set
			{
				RequisitionItem previousValue = this._RequisitionItem.Entity;
				if (((previousValue != value) 
							|| (this._RequisitionItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequisitionItem.Entity = null;
						previousValue.RequestedQuantities.Remove(this);
					}
					this._RequisitionItem.Entity = value;
					if ((value != null))
					{
						value.RequestedQuantities.Add(this);
						this._RequisitionItemId = value.Id;
					}
					else
					{
						this._RequisitionItemId = default(int);
					}
					this.SendPropertyChanged("RequisitionItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
